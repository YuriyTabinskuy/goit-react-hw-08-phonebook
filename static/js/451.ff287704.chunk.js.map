{"version":3,"file":"static/js/451.ff287704.chunk.js","mappings":"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","sources":["components/Styled/BgWrapper.styled.jsx","components/Styled/Section.styled.jsx","helpers/validationSchema.js","components/LogInForm/LogInForm.styled.jsx","components/LogInForm/LogInForm.jsx","pages/Login.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport LoginBgImage from 'img/login-bg-img.jpg';\nimport LoginBgImage2x from 'img/login-bg-img@2x.jpg';\nimport ContactsBgImage from 'img/contacts-bg-img.jpg';\nimport ContactsBgImage2x from 'img/contacts-bg-img@2x.jpg';\n\nexport const LoginBgWrapper = styled.div`\n  min-width: 320px;\n  height: 100%;\n  background: linear-gradient(\n      0deg,\n      rgba(0, 0, 0, 0.2) 0%,\n      rgba(0, 0, 0, 0.2) 100%\n    ),\n    url(${LoginBgImage});\n\n  background-repeat: no-repeat;\n  background-size: cover;\n  background-position: center;\n\n  filter: blur(1.5px);\n\n  @media (min-device-pixel-ratio: 2),\n    (min-resolution: 192dpi),\n    (min-resolution: 2dppx) {\n    background: linear-gradient(\n        0deg,\n        rgba(0, 0, 0, 0.2) 0%,\n        rgba(0, 0, 0, 0.2) 100%\n      ),\n      url(${LoginBgImage2x});\n    background-size: cover;\n    background-position: center;\n  }\n`;\n\nexport const ContactsBgWrapper = styled.div`\n  min-width: 320px;\n  height: 100%;\n  background: linear-gradient(\n      0deg,\n      rgba(0, 0, 0, 0.2) 0%,\n      rgba(0, 0, 0, 0.2) 100%\n    ),\n    url(${ContactsBgImage});\n\n  background-repeat: no-repeat;\n  background-size: cover;\n  background-position: top right;\n\n  @media (min-device-pixel-ratio: 2),\n    (min-resolution: 192dpi),\n    (min-resolution: 2dppx) {\n    background: linear-gradient(\n        0deg,\n        rgba(0, 0, 0, 0.2) 0%,\n        rgba(0, 0, 0, 0.2) 100%\n      ),\n      url(${ContactsBgImage2x});\n    background-size: cover;\n\n    background-position: top right;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Section = styled.section`\n  position: relative;\n  height: calc(100vh - 96px);\n`;\n","import * as yup from 'yup';\nimport 'yup-phone-lite';\n\nexport const contactsValidationSchema = yup.object({\n  name: yup.string().min(2).max(32).required('This field is required'),\n  number: yup\n    .string()\n    .phone(null, `Please enter a valid phone number`)\n    .required('This field is required'),\n});\n\n// Please enter a valid phone number in an international format. Example: +380 50-123-4567\n\nexport const registerValidationSchema = yup.object({\n  name: yup.string().min(2).max(32).required('This field is required'),\n  email: yup.string().email().required('This field is required'),\n  password: yup.string().min(7).max(32).required('This field is required'),\n});\n\nexport const loginValidationSchema = yup.object({\n  email: yup.string().email().required('This field is required'),\n  password: yup.string().min(7).max(32).required('This field is required'),\n});\n","import styled from 'styled-components';\nimport { Form as FormikForm, Field as FormikField } from 'formik';\nimport { colors, transition } from 'helpers/variables';\n\nexport const Form = styled(FormikForm)`\n  display: flex;\n  flex-direction: column;\n  row-gap: 52px;\n  align-items: center;\n`;\n\nexport const Title = styled.h1`\n  font-size: 25px;\n  font-weight: 500;\n  line-height: 1.22;\n  text-decoration: underline;\n  text-transform: uppercase;\n  margin-bottom: 30px;\n  text-align: center;\n`;\n\nexport const InputWrapper = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  gap: 6px;\n`;\n\nexport const Label = styled.label`\n  font-size: 17px;\n  font-weight: 200;\n  line-height: 1.22;\n`;\n\nexport const Field = styled(FormikField)`\n  width: 336px;\n  padding: 9px 20px;\n  border-radius: 10px;\n  border: 1px solid #000;\n  font-size: 16px;\n  background-color: transparent;\n\n  &:focus {\n    outline: 1.5px solid ${colors.mainAccentColor};\n  }\n\n  &::placeholder {\n    color: ${colors.placeholderColor};\n    font-weight: 200;\n    line-height: 1.22;\n  }\n`;\n\nexport const FormWrapper = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  padding: 64px 40px 56px;\n  background-color: ${colors.mainBgColor};\n  /* z-index: 999; */\n  border-radius: 10px;\n  background: #cfcfd1;\n  box-shadow: 0px 4px 11px 0px #000;\n`;\n\nexport const Button = styled.button`\n  padding: 6.5px 40px;\n  border: none;\n  border-radius: 10px;\n  background: ${colors.mainAccentColor};\n  box-shadow: 0px 4px 4px 0px rgba(0, 0, 0, 0.25);\n  color: #fff;\n  cursor: pointer;\n  font-size: 18px;\n  font-weight: 300;\n  line-height: 1.2;\n  transition: transform ${transition};\n\n  &:hover,\n  &:focus {\n    transform: scale(1.1);\n  }\n`;\n\nexport const AllInputsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  row-gap: 30px;\n`;\n\nexport const StyledErrorMessage = styled.p`\n  position: absolute;\n  bottom: -24px;\n  left: 20px;\n  color: #b40101;\n  font-size: 16px;\n  font-weight: 300;\n  line-height: 1.22;\n`;\n","import { ErrorMessage, Formik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/operations';\nimport {\n  AllInputsWrapper,\n  Button,\n  Field,\n  Form,\n  FormWrapper,\n  InputWrapper,\n  Label,\n  StyledErrorMessage,\n  Title,\n} from './LogInForm.styled';\nimport { loginValidationSchema } from 'helpers/validationSchema';\n\nexport const LogInForm = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <FormWrapper>\n      <Title>Log in</Title>\n      <Formik\n        initialValues={{ email: '', password: '' }}\n        validationSchema={loginValidationSchema}\n        onSubmit={(values, actions) => {\n          console.log(values);\n          dispatch(logIn(values));\n\n          actions.resetForm();\n        }}\n      >\n        <Form>\n          <AllInputsWrapper>\n            <InputWrapper>\n              <Label>Email</Label>\n              <Field type=\"email\" name=\"email\" placeholder=\"Your email\" />\n              <ErrorMessage\n                name=\"email\"\n                render={message => (\n                  <StyledErrorMessage>{message}</StyledErrorMessage>\n                )}\n              />\n            </InputWrapper>\n            <InputWrapper>\n              <Label>Password</Label>\n              <Field\n                type=\"password\"\n                name=\"password\"\n                placeholder=\"Your password\"\n              />\n              <ErrorMessage\n                name=\"password\"\n                render={message => (\n                  <StyledErrorMessage>{message}</StyledErrorMessage>\n                )}\n              />\n            </InputWrapper>\n          </AllInputsWrapper>\n          <Button type=\"submit\">Log In</Button>\n        </Form>\n      </Formik>\n    </FormWrapper>\n  );\n};\n","import { LogInForm } from 'components/LogInForm/LogInForm';\nimport { LoginBgWrapper } from 'components/Styled/BgWrapper.styled';\nimport { Section } from 'components/Styled/Section.styled';\n\nexport default function Register() {\n  return (\n    <main>\n      <Section>\n        <LoginBgWrapper />\n\n        <LogInForm />\n      </Section>\n    </main>\n  );\n}\n"],"names":["LoginBgWrapper","styled","_templateObject","_taggedTemplateLiteral","LoginBgImage","LoginBgImage2x","ContactsBgWrapper","_templateObject2","ContactsBgImage","ContactsBgImage2x","Section","contactsValidationSchema","yup","name","min","max","required","number","phone","registerValidationSchema","email","password","loginValidationSchema","Form","FormikForm","Title","InputWrapper","_templateObject3","Label","_templateObject4","Field","FormikField","_templateObject5","colors","FormWrapper","_templateObject6","Button","_templateObject7","transition","AllInputsWrapper","_templateObject8","StyledErrorMessage","_templateObject9","LogInForm","dispatch","useDispatch","_jsxs","children","_jsx","Formik","initialValues","validationSchema","onSubmit","values","actions","console","log","logIn","resetForm","type","placeholder","ErrorMessage","render","message","Register"],"sourceRoot":""}